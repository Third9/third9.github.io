{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Axios다양하게_활용하기-interceptor/","result":{"data":{"markdownRemark":{"id":"b79222d3-e5a5-5798-99dd-375a8b18fd6d","html":"<blockquote>\n<p>💡 새로운 서비스를 개발하면서 개인적으로 정리한 내용들입니다. 글이 깔끔하지 않을 수 있습니다.</p>\n</blockquote>\n<blockquote>\n<p>📔 이전글 보기: <a href=\"/posts/Axios%EB%8B%A4%EC%96%91%ED%95%98%EA%B2%8C_%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-async_await%EC%82%AC%EC%9A%A9/\">Axios 다양하게 활용하기: async/await사용</a></p>\n</blockquote>\n<h1 id=\"axios-모듈에-공통-설정을-적용하여-사용하기\" style=\"position:relative;\"><a href=\"#axios-%EB%AA%A8%EB%93%88%EC%97%90-%EA%B3%B5%ED%86%B5-%EC%84%A4%EC%A0%95%EC%9D%84-%EC%A0%81%EC%9A%A9%ED%95%98%EC%97%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"axios 모듈에 공통 설정을 적용하여 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Axios 모듈에 공통 설정을 적용하여 사용하기</h1>\n<h2 id=\"axios에-기본설정-적용하기\" style=\"position:relative;\"><a href=\"#axios%EC%97%90-%EA%B8%B0%EB%B3%B8%EC%84%A4%EC%A0%95-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"axios에 기본설정 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Axios에 기본설정 적용하기</h2>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// react를 기준으로 작성</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> Axios </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;axios&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> axiosInstance </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> Axios.</span><span class=\"mtk5\">create</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  timeout: </span><span class=\"mtk4\">5000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  headers: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;Content-Type&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;application/json&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 아래와 같이 사용하면 기본으로 위의 timeout 및 header 설정이 되어있다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.</span><span class=\"mtk5\">get</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;https://test.com/api/v1&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>위와 같이 axiosInstance라는 객체를 만들어서 사용하게 되면 모든 axios 호출시에 timout 제한이 5초로 설정되고, headers에 <code>application/json</code> 설정이 들어가게 된다.</p>\n<h2 id=\"axios에서-request와-response를-interceptor-하기\" style=\"position:relative;\"><a href=\"#axios%EC%97%90%EC%84%9C-request%EC%99%80-response%EB%A5%BC-interceptor-%ED%95%98%EA%B8%B0\" aria-label=\"axios에서 request와 response를 interceptor 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Axios에서 request와 response를 interceptor 하기</h2>\n<p>Axios는 위에서도 언급했듯이 http 통신을 위한 모듈료 RestAPI와 통신을 하는데 많이 사용된다. 문서를 보면 여러가지 사용법등이 있지만, 본인이 신규 프로젝트 진행시에 가장 덕을 보았던 부분은 request와 response를 <code>interceptor</code> 하는 부분이었다.</p>\n<p>이름 그대로 request/response 이벤트를 interceptor 하는데, request 시에는 server로 요청보내기 바로전의 정보를 interceptor하며, response는 서버에서 요청받아온 데이터를 front로 return하기전에 interceptor가 가능하다. 자세한 내용은 아래 코드를 보자</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// request를 interceptor 하기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.interceptors.request.</span><span class=\"mtk5\">use</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">config</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** config에는 위의 axiosInstance 객체를 이용하여 request를 보냈을떄의 모든 설정값들이 들어있다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * [</span><span class=\"mtk6\">활용</span><span class=\"mtk3\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * 1. api요청의 경우 token이 필요한 경우가 있는데, 필요에 따른 토큰 정보들을 여기서 처리할 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * 토큰에 대한 정보를 여러곳에서 처리하지 않아도 된다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * 2. 요청 method에 따른 외부로 드러내지 않고 처리하고 싶은 부분에 대한 작업이 가능</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> config;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">err</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** request 요청을 보낼때 error가 발생하는 경우 여기서 catch가 가능하다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Promise</span><span class=\"mtk1\">.</span><span class=\"mtk5\">reject</span><span class=\"mtk1\">(err);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// response를 interceptor 하기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.interceptors.response.</span><span class=\"mtk5\">use</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">config</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** 요청을 보낸 뒤에 response(응답)이 오는 경우에 여기서 먼저 확인이 가능하다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * [</span><span class=\"mtk6\">활용</span><span class=\"mtk3\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * 1. status-code가 정상적이어도 내용상의 이유로 에러처리가 필요한 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * 2. 민감정보 또는 데이터에 대한 가공 작업</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> config;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ({ </span><span class=\"mtk10 mtki\">config</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">request</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">response</span><span class=\"mtk1\">, </span><span class=\"mtk7\">...</span><span class=\"mtk10 mtki\">err</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** response응답 후에 status-code가 4xx, 5xx 처럼 에러를 나타내는 경우 해당 루트를 수행한다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> errMsg </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;Error Message&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Promise</span><span class=\"mtk1\">.</span><span class=\"mtk5\">reject</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      config,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      message: errMsg,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      response,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">...</span><span class=\"mtk1\">err,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>위의 방식을 사용하면 좀더 다양하게 활용이 가능하다.</p>\n<h2 id=\"custom-axios-활용\" style=\"position:relative;\"><a href=\"#custom-axios-%ED%99%9C%EC%9A%A9\" aria-label=\"custom axios 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Axios 활용</h2>\n<p>위에서 작성한것처럼 custom axios 파일을 만들어서 실제 서비스에서 활용하자. 우선 필요에 따른 기능들이 구현된 별도의 파일을 아래처럼 만든다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// axiosConfig.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> React </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> Axios </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;axios&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> axiosInstance </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> Axios.</span><span class=\"mtk5\">create</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  timeout: </span><span class=\"mtk4\">5000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  headers: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&#39;Content-Type&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;application/json&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.interceptors.request.</span><span class=\"mtk5\">use</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">config</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> config;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">err</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Promise</span><span class=\"mtk1\">.</span><span class=\"mtk5\">reject</span><span class=\"mtk1\">(err);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.interceptors.response.</span><span class=\"mtk5\">use</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">config</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> config;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10 mtki\">err</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Promise</span><span class=\"mtk1\">.</span><span class=\"mtk5\">reject</span><span class=\"mtk1\">(err);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk7\">default</span><span class=\"mtk1\"> axiosInstance;</span></span></span></code></pre>\n<p>사용하려는 위치에서 해당 파일을 import 한뒤 기존엔 axios를 사용하듯이 이용한다</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// App.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> React </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> axiosInstance </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;axiosConfig&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// 해당 import 위치는 axiosConfig.js 파일 위치에 따라 다르다/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">axiosInstance.</span><span class=\"mtk5\">get</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;https://test.com/api/v1&#39;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>위와 같은 형태로 설정된 axios 코드를 import 하여 기존 axios 를 사용하듯이 사용하면 된다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk10 { color: #FD971F; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/Axios%EB%8B%A4%EC%96%91%ED%95%98%EA%B2%8C_%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-interceptor/#axios-%EB%AA%A8%EB%93%88%EC%97%90-%EA%B3%B5%ED%86%B5-%EC%84%A4%EC%A0%95%EC%9D%84-%EC%A0%81%EC%9A%A9%ED%95%98%EC%97%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">Axios 모듈에 공통 설정을 적용하여 사용하기</a></p>\n<ul>\n<li><a href=\"/posts/Axios%EB%8B%A4%EC%96%91%ED%95%98%EA%B2%8C_%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-interceptor/#axios%EC%97%90-%EA%B8%B0%EB%B3%B8%EC%84%A4%EC%A0%95-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">Axios에 기본설정 적용하기</a></li>\n<li><a href=\"/posts/Axios%EB%8B%A4%EC%96%91%ED%95%98%EA%B2%8C_%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-interceptor/#axios%EC%97%90%EC%84%9C-request%EC%99%80-response%EB%A5%BC-interceptor-%ED%95%98%EA%B8%B0\">Axios에서 request와 response를 interceptor 하기</a></li>\n<li><a href=\"/posts/Axios%EB%8B%A4%EC%96%91%ED%95%98%EA%B2%8C_%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0-interceptor/#custom-axios-%ED%99%9C%EC%9A%A9\">Custom Axios 활용</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/Axios다양하게_활용하기-interceptor/","tagSlugs":["/tag/javascript/","/tag/axios/","/tag/interceptor/"]},"frontmatter":{"date":"2021-03-02T08:01:14.627Z","description":"axios에서 interceptor를 활용한 방법에 대해서 간략히 다룹니다.","tags":["javascript","axios","interceptor"],"title":"Axios 다양하게 활용하기: interceptor","socialImage":null},"headings":[{"value":"Axios 모듈에 공통 설정을 적용하여 사용하기","depth":1},{"value":"Axios에 기본설정 적용하기","depth":2},{"value":"Axios에서 request와 response를 interceptor 하기","depth":2},{"value":"Custom Axios 활용","depth":2}]}},"pageContext":{"slug":"/posts/Axios다양하게_활용하기-interceptor/"}}}