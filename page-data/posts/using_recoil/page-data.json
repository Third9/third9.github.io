{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/using_recoil/","result":{"data":{"markdownRemark":{"id":"2c6719f8-a314-5fe7-9ffc-9bdc890af244","html":"<blockquote>\n<p>💡 이 글은 예전팀에서 서비스를 개발하는 시점에 Recoil을 활용했던 내용을 정리한 글입니다.\n원래는 21년 초에 작성하려던 글이 계속 밀리면서 이제서야 글을 올립니다.</p>\n</blockquote>\n<p>새로운 서비스를 개발하면서 상태관리에 Redux가 아닌 Recoil을 적용하였다. Recoil을 사용한 이유는 낮은 러닝커브로 React를 처음 접하는 사람들에게 유리하고, 여러가지 모듈(redux-xxxx 등)을 설치할 필요없이 단 하나로 사용이 가능하다는 점이다. 비동기도 지원한다.</p>\n<blockquote>\n<p>🚨 다만, Recoil의 경우 아직 실험적인 부분이 많기에 사용하기에 있어서 선행적인 Test 및 적용 범위 검토가 필요하다고 생각한다.</p>\n</blockquote>\n<h2 id=\"recoil--atom-selector\" style=\"position:relative;\"><a href=\"#recoil--atom-selector\" aria-label=\"recoil  atom selector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recoil !! Atom? Selector?</h2>\n<p>일단 Recoil을 사용하기 위해서는 react의 component가 함수형(Hook)임을 전제로 한다.</p>\n<p>그리고 <code>atom</code>과 <code>selector</code>의 개념에 대해서도 알아야하는데, <code>atom</code>은 redux의 상태를 나타내는 것과 같은 개념으로 생각하면 쉽다, <code>selector</code>는 순수 function으로 atom 또는 다른 selector의 값을 받아서 사용이 가능하고, 해당 값이 update 될 경우 해당 selector의 function을 수행한다. selector에서 atom의 값을 가져오거나 수정하는 작업도 가능하다.</p>\n<h2 id=\"recoil-기본-설정\" style=\"position:relative;\"><a href=\"#recoil-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-label=\"recoil 기본 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recoil 기본 설정</h2>\n<p>설치방법은 심플하게..</p>\n<pre class=\"grvsc-container monokai\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add recoil</span></span></span></code></pre>\n<p>설치를 했으면, Recoil이 작동할 수 있도록 기본 셋팅을 해주자. redux처럼 복잡한것 하나없이 RecoilRoot만 추가해주면 Recoil을 사용하기 위한 기본 설정이 완료 된다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> React </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { RecoilRoot } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;recoil&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk9 mtki\">RecoilRoot</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk7\">div</span><span class=\"mtk1\"> </span><span class=\"mtk5\">className</span><span class=\"mtk7\">=</span><span class=\"mtk6\">&quot;App&quot;</span><span class=\"mtk1\">&gt;&lt;/</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk9 mtki\">RecoilRoot</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span></code></pre>\n<h2 id=\"atom-사용\" style=\"position:relative;\"><a href=\"#atom-%EC%82%AC%EC%9A%A9\" aria-label=\"atom 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Atom 사용</h2>\n<p>atom은 상태를 나타내는 기본 단위로 아래와 같은 구조를 가진다.</p>\n<h3 id=\"atom\" style=\"position:relative;\"><a href=\"#atom\" aria-label=\"atom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>atom:</h3>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/atom.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { atom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> stateAtom </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/stateAtom&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 타입을 명시적으로 선언하는 경우 형식</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> numArrayAtom </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9 mtki\">number</span><span class=\"mtk1\">[]&gt;({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@component/numArrayAtom&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: [</span><span class=\"mtk4\">10</span><span class=\"mtk1\">, </span><span class=\"mtk4\">20</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>위와 같은 형태로 atom을 선언한다. 각 상태의 값을 관리하기 위해서 유일성을 가지는 key를 선언하고, default는 이름 그대로 처음 atom 상태값이 가질 기본 값을 선언한다. default는 str, num, array 등 타입 선언이 가능하다. Atom의 자세한 사용을 위해서는 <a href=\"https://recoiljs.org/docs/api-reference/core/atom\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atom 구조</a>를 참조하길 바란다</p>\n<p>선언한 atom을 사용하기 위해서는 <code>useRecoilState</code> 를 이용한다. 방식은 <code>useState</code>를 사용하는 것과 유사하다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 일반적인 형태</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useRecoilState } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateAtom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/atom&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> [state, setState] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilState</span><span class=\"mtk1\">(stateAtom);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>위와 같은 일반적인 형태 외에도 recoil은 <code>useSetRecoilState</code>, <code>useRecoilValue</code> 와 같은 다양한 hook을 지원한다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useSetRecoilState, useRecoilValue } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateAtom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/atom&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">상태값을 사용할 필요는 없고 Update만 하는 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">AComponent</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> setState </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useSetRecoilState</span><span class=\"mtk1\">(stateAtom);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">상태값을 이용하기만 하는 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">BComponent</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> state </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilValue</span><span class=\"mtk1\">(stateAtom);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>서비스를 개발하다 보면 다양한 경우가 발생한다. 필요치 않는 변수, 함수를 코드상에 두는 경우에는 Warn이 발생하고, 불필요한 자원의 사용이므로 필요에 맞는 Hook을 이용하면 된다. 위에서 사용한 hook 말고도 다양한 hook을 지원한다.</p>\n<h3 id=\"atomfamily\" style=\"position:relative;\"><a href=\"#atomfamily\" aria-label=\"atomfamily permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>atomFamily:</h3>\n<p>상태관리를 할때 각 화면별 기능/서비스 등에서 동일한 상태값을 다르게 사용해야 하는 경우가 있다. 유사한 상태정보를 자원별로 관리해야 하는 경우 Atom에서는 아래와 같이 선언했다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/atom.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { atom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// BAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> atomOfA </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/atomOfA&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> atomOfB </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/atomOfB&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> atomOfC </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/atomOfC&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p>이름만 바꿔서 복사/붙여넣기다.. 다행이도 recoil에서는 <code>AtomFamily</code>를 이용 해서 불필요함을 해결한다. 매우 깔끔해진다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/atom.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { atomFamily } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Good</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> resAtom </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atomFamily</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/resAtom&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useRecoilState } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { resAtom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/recoil/atom&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> [state, setState] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilState</span><span class=\"mtk1\">(</span><span class=\"mtk5\">resAtom</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;{{resource}}&#39;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>구분하려는 자원명칭을 위와 같이 <code>{{resource}}</code>로 선언하여 atom을 multiple 하게 만들 수 있다.</p>\n<h2 id=\"selector-사용\" style=\"position:relative;\"><a href=\"#selector-%EC%82%AC%EC%9A%A9\" aria-label=\"selector 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selector 사용</h2>\n<p>selector는 순수함수 또는 특정한 상태를 전달한다. atom이 데이터의 상태를 가진다면, selector는 함수를 통해서 가공된 결과/상태를 얻을 수 있다.</p>\n<p>selector는 get/set 내부 함수를 지원하는데 이 내부 함수를 이용해서 Read/Update가 가능하다. 또한 추가 모듈없이도 비동기를 지원한다.(selector도 atom과 마찬가지로 selectorFamily가 존재한다.)</p>\n<h3 id=\"selector\" style=\"position:relative;\"><a href=\"#selector\" aria-label=\"selector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selector:</h3>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/selector.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { selector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateAtom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;./atom&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> stateSelector </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&#39;@common/stateSelector&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">get</span><span class=\"mtk1\">: ({ </span><span class=\"mtk10 mtki\">get</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> state</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">string</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">get</span><span class=\"mtk1\">(stateAtom);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk6\">`Selector </span><span class=\"mtk7\">${</span><span class=\"mtk1\">state</span><span class=\"mtk7\">}</span><span class=\"mtk6\">`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useRecoilValue } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateSelector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/recoil/selector&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> state </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilValue</span><span class=\"mtk1\">(stateSelector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>위의 코드를 보면 get 메소드 안에서 param으로 <code>get</code> 함수를 받는것을 볼 수 있는데, 이것을 이용해서 다른 atom의 상태 값을 가져올 수 있다. read 형태로 selector에서 값을 가져온다면 useRecoilValue 만을 사용해도 된다.</p>\n<h3 id=\"selector-set\" style=\"position:relative;\"><a href=\"#selector-set\" aria-label=\"selector set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selector: set()</h3>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/selector.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { selector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateAtom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;./atom&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> stateSelector </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&#39;@common/stateSelector&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">get</span><span class=\"mtk1\">: ({ </span><span class=\"mtk10 mtki\">get</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// stateAtom의 값을 가져온다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> state</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">string</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">get</span><span class=\"mtk1\">(stateAtom);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk6\">`Selector </span><span class=\"mtk7\">${</span><span class=\"mtk1\">state</span><span class=\"mtk7\">}</span><span class=\"mtk6\">`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">set</span><span class=\"mtk1\">: ({ </span><span class=\"mtk10 mtki\">set</span><span class=\"mtk1\"> }, </span><span class=\"mtk10 mtki\">params</span><span class=\"mtk1\">) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> state</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">string</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> params.state;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// stateAtom에 param으로 전달받은 state 값을 등록한다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk5\">set</span><span class=\"mtk1\">(stateAtom, state);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useRecoilState } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { stateSelector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/recoil/selector&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> [state, setState] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilState</span><span class=\"mtk1\">(stateSelector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>selector에서 set을 사용할 경우 useRecoilState를 이용해서 처리 가능하다. setState를 호출 할때 stateSelector내부의 <code>set</code>함수를 호출한다.</p>\n<h3 id=\"selector-asyncawait\" style=\"position:relative;\"><a href=\"#selector-asyncawait\" aria-label=\"selector asyncawait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selector: Async/Await</h3>\n<p>기본 방식과 크게 다르지 않다. 그저 async/await를 선언함으로써 비동기 처리가 가능하다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/selector.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { selector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;recoil&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> itemSelector </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/itemSelector&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">get</span><span class=\"mtk1\">: </span><span class=\"mtk7\">async</span><span class=\"mtk1\"> ({ </span><span class=\"mtk10 mtki\">get</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> res</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">object</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">await</span><span class=\"mtk1\"> </span><span class=\"mtk5\">fetch</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;url&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> data</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">any</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> res.</span><span class=\"mtk5\">json</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// any는 자제합시다..</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> data;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>위와 같이 비동기로 처리할 경우 수행과정 동안의 딜레이 처리방식은 <code>React.Suspense</code>를 이용하는 방식과 <code>useRecoilValueLoadable()</code>를 이용하는 방식이 있다. Loadable을 이용해서 아래와 같이 사용이 가능하다. (React.Suspense 방식은 recoil이 아니어도 다른곳에서 사용하는 방식과 유사하다.)</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/App.tsx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> React </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useRecoilValueLoadable } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { itemSelector } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;src/selector&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">App</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> itemLoader </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useRecoilValueLoadable</span><span class=\"mtk1\">(itemSelector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">let</span><span class=\"mtk1\"> state</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">string</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> itemLoader.state;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">renderData</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">switch</span><span class=\"mtk1\"> (state) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;hasValue&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;</span><span class=\"mtk7\">div</span><span class=\"mtk1\"> </span><span class=\"mtk5\">className</span><span class=\"mtk7\">=</span><span class=\"mtk6\">&quot;itemList&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">{</span><span class=\"mtk1\">itemLoader.contents.</span><span class=\"mtk5\">map</span><span class=\"mtk1\">((</span><span class=\"mtk10 mtki\">item</span><span class=\"mtk1\">) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk7\">div</span><span class=\"mtk1\"> </span><span class=\"mtk5\">className</span><span class=\"mtk7\">=</span><span class=\"mtk6\">&quot;item&quot;</span><span class=\"mtk1\">&gt;</span><span class=\"mtk7\">{</span><span class=\"mtk1\">item</span><span class=\"mtk7\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;})</span><span class=\"mtk7\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;/</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;loading&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;...is Loading&lt;/</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;hasError&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;Error&lt;/</span><span class=\"mtk7\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>async로 구현된 selector를 useRecoilValueLoadable()를 이용하여 호출하면 해당 객체는 state와 contents 두개의 상태를 가진다. state는 <code>hasValue, loading, hasError</code> 3가지의 상태를 가지는데 <code></code>contents<code>의 값은 state가</code>hasValue` 일때만 가진다.</p>\n<h3 id=\"selectorfamily\" style=\"position:relative;\"><a href=\"#selectorfamily\" aria-label=\"selectorfamily permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selectorFamily:</h3>\n<p>selector도 atom과 같이 family가 존재한다. 코드상의 resource는 selectorFamily 선언시 넣어주는 resource 값이다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/selector.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { selectorFamily } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;recoil&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { selectedItemAtomF } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;src/atom&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> itemSelectorF </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">selectorFamily</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/itemSelectorF&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">get</span><span class=\"mtk1\">: </span><span class=\"mtk10 mtki\">resource</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">async</span><span class=\"mtk1\"> ({ </span><span class=\"mtk10 mtki\">get</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> item </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">get</span><span class=\"mtk1\">(</span><span class=\"mtk5\">selectedItemAtomF</span><span class=\"mtk1\">(resource));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> { resource, item };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h2 id=\"etc-atomeffect\" style=\"position:relative;\"><a href=\"#etc-atomeffect\" aria-label=\"etc atomeffect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ETC: atom.effect</h2>\n<p>시험적인 기능 중 atom에 effect라는 method가 있다. useEffect와 같이 상태가 초기화/변경 되었을때 선언한 function을 순차적으로 수행하는데 다른점은 상태가 atom 본인이라는 점이다. 해당 기능은 아직 unstable하기에 사용에 있어서 주의를 요한다. 다만, 기능적인 부분에 있어서는 활용도가 높다고 생각하여 같이 설명한다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"tsx\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/recoil/atom.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { atom } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> stateAtom </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  key: </span><span class=\"mtk6\">&quot;@common/stateAtom&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  default: </span><span class=\"mtk6\">&#39;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  effects_UNSTABLE: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ({ </span><span class=\"mtk10 mtki\">setSelf</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">onSet</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk5\">onSet</span><span class=\"mtk1\">((</span><span class=\"mtk10 mtki\">newValue</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">oldValue</span><span class=\"mtk1\">) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// 수행할 코드 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// atom 자신을 수정할 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk5\">setSelf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">...</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ({ </span><span class=\"mtk10 mtki\">setSelf</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">onSet</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk5\">onSet</span><span class=\"mtk1\">((</span><span class=\"mtk10 mtki\">newValue</span><span class=\"mtk1\">, </span><span class=\"mtk10 mtki\">oldValue</span><span class=\"mtk1\">) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// 수행할 코드 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// atom 자신을 수정할 경우</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk5\">setSelf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">...</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p>effect의 경우 사용을 위해서는 effects_UNSTABLE 이라고 선언하여야 한다. 공식 문서를 보면 해당 기능을 이용해서 atom의 log, history 관리 등 다양한 역할을 할 수 있다. 선언하는 function의 경우도 async/await를 이용한 비동기를 지원한다. 더 자세한 내용 및 사용법은 <a href=\"https://recoiljs.org/docs/guides/atom-effects\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공식문서</a>를 참조 바란다.</p>\n<blockquote>\n<p>글을 쓰는 사이에 버전업이 많이 되었다… 새롭게 추가된 기능들에 대해서는 많은 분들이 글을 읽어주시면 추가로 정리하겠습니다.</p>\n</blockquote>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk10 { color: #FD971F; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/posts/using_recoil/#recoil--atom-selector\">Recoil !! Atom? Selector?</a></li>\n<li><a href=\"/posts/using_recoil/#recoil-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\">Recoil 기본 설정</a></li>\n<li>\n<p><a href=\"/posts/using_recoil/#atom-%EC%82%AC%EC%9A%A9\">Atom 사용</a></p>\n<ul>\n<li><a href=\"/posts/using_recoil/#atom\">atom:</a></li>\n<li><a href=\"/posts/using_recoil/#atomfamily\">atomFamily:</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/using_recoil/#selector-%EC%82%AC%EC%9A%A9\">Selector 사용</a></p>\n<ul>\n<li><a href=\"/posts/using_recoil/#selector\">selector:</a></li>\n<li><a href=\"/posts/using_recoil/#selector-set\">selector: set()</a></li>\n<li><a href=\"/posts/using_recoil/#selector-asyncawait\">selector: Async/Await</a></li>\n<li><a href=\"/posts/using_recoil/#selectorfamily\">selectorFamily:</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/using_recoil/#etc-atomeffect\">ETC: atom.effect</a></li>\n</ul>","fields":{"slug":"/posts/using_recoil/","tagSlugs":["/tag/recoil/","/tag/react/"]},"frontmatter":{"date":"2021-10-17T09:23:19.363Z","description":"새로운 서비스에 Recoil를 사용하면서 알게된 구조 및 방법을 정리","tags":["recoil","react"],"title":"실 서비스에 Recoil 활용하기","socialImage":null},"headings":[{"value":"Recoil !! Atom? Selector?","depth":2},{"value":"Recoil 기본 설정","depth":2},{"value":"Atom 사용","depth":2},{"value":"atom:","depth":3},{"value":"atomFamily:","depth":3},{"value":"Selector 사용","depth":2},{"value":"selector:","depth":3},{"value":"selector: set()","depth":3},{"value":"selector: Async/Await","depth":3},{"value":"selectorFamily:","depth":3},{"value":"ETC: atom.effect","depth":2}]}},"pageContext":{"slug":"/posts/using_recoil/"}}}