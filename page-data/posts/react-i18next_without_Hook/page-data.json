{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react-i18next_without_Hook/","result":{"data":{"markdownRemark":{"id":"de33aca5-c815-5998-8b14-455c4baf23d3","html":"<blockquote>\n<p>💡 서비스를 개발하면서 개인적으로 정리한 내용으로 글이 깔끔하지 않을 수 있습니다.</p>\n</blockquote>\n<h2 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<blockquote>\n<p><a href=\"https://react.i18next.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-i18next</a> 모듈을 hook이 아닌 방식으로 사용하는 방법을 설명합니다.</p>\n</blockquote>\n<hr>\n<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>React를 기반으로 개발할때 다국어 기능을 추가할 경우 선택하는 모듈중의 하나가 <code>react-i18next</code> 으로 react-i18next는 React의 hook을 지원하며, 빠르고 간편하게 다국어 기능을 구현할 수 있다.</p>\n<p>다만, hook이 아닌 환경에서 다른 모듈을 사용하지 않고 동일한 모듈을 이용하려 구현한다면 별도의 추가작업을 해야하는데, 여기서는 그 추가 작업에 대한 내용을 중점으로 다룬다.</p>\n<h2 id=\"기본적인-i18next-사용\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-i18next-%EC%82%AC%EC%9A%A9\" aria-label=\"기본적인 i18next 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 i18next 사용</h2>\n<blockquote>\n<p>🚨 우리가 사용하는건 i18next를 기반으로 만든 <code>react-i18next</code>입니다. <code>i18next</code>가 아닙니다.</p>\n</blockquote>\n<p>다국어 처리를 위해서 react-i18next를 사용할때 hook 기반의 <code>useTranslation</code> 를 이용하여 매우 편리하게 사용이 가능하다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> React </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { useTranslation } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react-i18next&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> </span><span class=\"mtk5\">TransComponent</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">React</span><span class=\"mtk7\">:</span><span class=\"mtk5 mtku\">FC</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> { t } </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">useTranslation</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">span</span><span class=\"mtk1\">&gt;</span><span class=\"mtk7\">{</span><span class=\"mtk5\">t</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;translate me&quot;</span><span class=\"mtk1\">)</span><span class=\"mtk7\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk7\">span</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<blockquote>\n<p>useTranslation() 빠진 부분 수정 (21/10/24)</p>\n</blockquote>\n<p>위와 같이 사용하기만 해도 <code>translate me</code> 는 다국어 처리가 된다.</p>\n<h2 id=\"function-형태로-사용\" style=\"position:relative;\"><a href=\"#function-%ED%98%95%ED%83%9C%EB%A1%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"function 형태로 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function 형태로 사용</h2>\n<p>하지만, 개발도중 변수 또는 상수등의 값에 다국어 처리를 하려는 경우 위와 같은 방식은 사용할 수 없다.(component에 props 형태로 전달 방식도 가능하지만, 전달되는 모든 값이 아닌 필요 값만 변환되길 원한다.)</p>\n<p>예를 들어서 아래와 같이 선언된 코드에서 다국어 처리를 하려면, 해당 값을 component 내에 선언하지 않는 이상 다국어가 적용되지 않는다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// TableConf.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> TableColumns </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk6\">&quot;Column1&quot;</span><span class=\"mtk1\">, index: </span><span class=\"mtk6\">&quot;column1&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk6\">&quot;Column2&quot;</span><span class=\"mtk1\">, index: </span><span class=\"mtk6\">&quot;column2&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk6\">&quot;Column3&quot;</span><span class=\"mtk1\">, index: </span><span class=\"mtk6\">&quot;column3&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>이럴때 아래와 같은 function을 만들어서 활용이 가능하다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"jsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// funcTrans.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> { Translation } </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react-i18next&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">function</span><span class=\"mtk1\"> </span><span class=\"mtk5\">funcTransI18N</span><span class=\"mtk1\">(</span><span class=\"mtk10 mtki\">value</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">string</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk9 mtki\">Translation</span><span class=\"mtk1\">&gt;</span><span class=\"mtk7\">{</span><span class=\"mtk1\">(</span><span class=\"mtk10 mtki\">t</span><span class=\"mtk1\">, { </span><span class=\"mtk10 mtki\">i18n</span><span class=\"mtk1\"> }) </span><span class=\"mtk9 mtki\">=&gt;</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk7\">span</span><span class=\"mtk1\">&gt;</span><span class=\"mtk7\">{</span><span class=\"mtk5\">t</span><span class=\"mtk1\">(value)</span><span class=\"mtk7\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk7\">span</span><span class=\"mtk1\">&gt;</span><span class=\"mtk7\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk9 mtki\">Translation</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// TableConf.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> TableColumns </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk5\">funcTransI18N</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;Column1&quot;</span><span class=\"mtk1\">), index: </span><span class=\"mtk6\">&quot;column1&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk6\">&quot;Column2&quot;</span><span class=\"mtk1\">, index: </span><span class=\"mtk6\">&quot;column2&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  { title: </span><span class=\"mtk6\">&quot;Column3&quot;</span><span class=\"mtk1\">, index: </span><span class=\"mtk6\">&quot;column3&quot;</span><span class=\"mtk1\"> },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>위와같이 처리할 경우 기존의 react-i18next 모듈을 이용하면서 기본 JS 코드에서도 다국어를 같이 적용하여 사용 가능하다.</p>\n<blockquote>\n<p>💡 <code>react-i18next</code> 의 설정 및 사용법도 알고싶다면 comment 또는 mail로 요청주세요.</p>\n</blockquote>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk10 { color: #FD971F; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/posts/react-i18next_without_Hook/#tldr\">TL;DR</a></li>\n<li><a href=\"/posts/react-i18next_without_Hook/#%EA%B0%9C%EC%9A%94\">개요</a></li>\n<li><a href=\"/posts/react-i18next_without_Hook/#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-i18next-%EC%82%AC%EC%9A%A9\">기본적인 i18next 사용</a></li>\n<li><a href=\"/posts/react-i18next_without_Hook/#function-%ED%98%95%ED%83%9C%EB%A1%9C-%EC%82%AC%EC%9A%A9\">function 형태로 사용</a></li>\n</ul>","fields":{"slug":"/posts/react-i18next_without_Hook/","tagSlugs":["/tag/javascript/","/tag/react/","/tag/i-18-next/"]},"frontmatter":{"date":"2021-07-28T05:37:08.151Z","description":"다국어 모듈인 react-i18next를 일반 함수처럼 활용하기","tags":["javascript","react","i18next"],"title":"react-i18next를 hook없이 사용하기","socialImage":null},"headings":[{"value":"TL;DR","depth":2},{"value":"개요","depth":2},{"value":"기본적인 i18next 사용","depth":2},{"value":"function 형태로 사용","depth":2}]}},"pageContext":{"slug":"/posts/react-i18next_without_Hook/"}}}