{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/openstack_contributor_도전/","result":{"data":{"markdownRemark":{"id":"2711919a-e0b5-55e4-b12e-e28ac7fb03ad","html":"<blockquote>\n<p>오픈스택을 공부하면서 간단한 철자 오류를 수정하고 싶어서 github에 올렸더니 contributor가 되려면 그냥 PR 하는 방법이 아닌 여러가지 단계를 거치기에 직접 시도해 본 내용을 글로 남깁니다.</p>\n</blockquote>\n<p>처음에는 일반적인 github 방식대로 Fork 한 뒤에 수정해서 PR을 했더니 PR 글 밑에 아래와 같은 답변을 줬습니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Thank you for contributing to openstack/cinder!</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">openstack/cinder uses Gerrit for code review.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">If you have never contributed to OpenStack before make sure you have read the </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">getting started documentation: http://docs.openstack.org/infra/manual/developers.html#getting-started</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Otherwise please visit http://docs.openstack.org/infra/manual/developers.html#development-workflow </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">and follow the instructions there to upload your change to Gerrit.</span></span></code></pre>\n<p>그래서 설명대로 링크를 찾아가 보니, 뭔가 엄청 많고 불친절한 영어의 압박…\n내용을 읽어보면 우선 <code>lunchpad</code>에 계정을 등록하라고 합니다.</p>\n<blockquote>\n<p>contributer 를 위해서는 코드리뷰를 해야 하는데 코드리뷰 시스템에 사용되는 계정이 open id 를 이용하기 때문에 그걸 등록해야 한다.</p>\n</blockquote>\n<p><a href=\"https://login.launchpad.net\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lunchpad 링크</a>로 이동해서 회원가입을 하고, 회원가입도 했으면 이제 <a href=\"https://review.openstack.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://review.openstack.org/</a> 로 이동합니다. 여기 가서 오른쪽 상단을 보면 로그인 할 수 있게 되어있고, <code>open id</code> 에 로그인이 된 상태면 손쉽게 로그인이 가능합니다.</p>\n<blockquote>\n<p>아래의 순서대로 진행하면 됩니다.</p>\n<ol>\n<li>로그인 후에 오른쪽 상단의 이름을 선택하면 <code>setting</code> 버튼이 있습니다.</li>\n<li><code>setting</code> 화면에서 <code>profile</code>탭에 <code>username</code>을 등록하고, <code>contact information</code>은 내 개인정보를 등록하면 됩니다.</li>\n<li><code>ssh public keys</code>탭으로 이동해서 공용키를 등록하고, 없으면 터미널에서 <code>ssh-keygen</code> 을 실행하면 됩니다.<br>\n<code>(*공용키 생성부터 등록까지의 방법도 해당 탭에 \"How to Generate an SSH Key\" 라는 이름으로 잘 설명되 있습니다.)</code></li>\n<li><code>Agreements</code>탭으로 이동해서 개인용 인증 라이센스를 발급 받으면 코드리뷰를 위한 기본 계정 생성 작업은 끝납니다.</li>\n</ol>\n</blockquote>\n<p>그 다음 부터는 맨 위에서 나온 getting-started 가이드를 보면서 다시 진행하면 됩니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git config </span><span class=\"mtk7\">--</span><span class=\"mtk1\">global user.name xxxxx</span></span></span></code></pre>\n<p>설명 그대로 진행해서 git 전역 환경설정에 이름과 주소를 등록합니다.\n여기까지 했으면 이제 <code>git-review</code>를 설치합니다, 설치 방법은 자신의 환경 및 선호도에 따라서 다양하게 나와있습니다.\n이제 여기 까지 잘 됬는지 확인을 해보죠 아래의 명령어를 터미널에서 입력합니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ssh </span><span class=\"mtk7\">-</span><span class=\"mtk1\">p </span><span class=\"mtk4\">29418</span><span class=\"mtk1\"> {username}@review.openstack.org</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># {username} 위치에는 아까 코드리뷰 등록할때 만든 username을 등록해야 한다.</span></span></span></code></pre>\n<p>잘됬으면 Welcome 어쩌구 저쩌구 하는 환영의 메시지가 나옵니다.\n그럼 이제 원하는 프로젝트를 골라서 git으로 다운받으면 됩니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git clone ssh:</span><span class=\"mtk7\">//</span><span class=\"mtk1\">{username}@review.openstack.org:</span><span class=\"mtk4\">29418</span><span class=\"mtk7\">/</span><span class=\"mtk1\">{repo project name}</span></span></span></code></pre>\n<p>내가 원하는 프로젝트 이름을 입력했는데 안되면 해당\n<a href=\"https://review.openstack.org/#/admin/projects/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 로 들어가서 검색하면 됩니다.\n해당 repo를 다운받은 뒤에 디렉토리로 이동해서 아래의 명령어를 입력해 줍니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git review </span><span class=\"mtk7\">-</span><span class=\"mtk1\">s</span></span></span></code></pre>\n<p>명령어를 입력하면, 공용키 비밀번호를 입력하라고 나옵니다.</p>\n<blockquote>\n<p>에러가 발생한 경우</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git remote add gerrit ssh:</span><span class=\"mtk7\">//</span><span class=\"mtk1\">{username}@review.openstack.org:</span><span class=\"mtk4\">29418</span><span class=\"mtk7\">/</span><span class=\"mtk1\">{repo project name}</span></span></span></code></pre>\n</blockquote>\n<p>그 이후에는 아래의 명령어 입력</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git remote update</span></span></span></code></pre>\n<p>우선 브랜치를 새로 생성하고요 <a href=\"https://docs.openstack.org/infra/manual/developers.html#starting-a-change\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크 참조</a></p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git checkout </span><span class=\"mtk7\">-</span><span class=\"mtk1\">b {브랜치명}</span></span></span></code></pre>\n<p>브랜치 명은 보통 <code>bp/{내용}</code> 형태로 하는듯 한데, review 사이트를 가보면 각각 다릅니다, 최대한 링크의 설명대로 맞춰서 작성하죠.\n코드를 다 수정했으면 그 이후에는</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">git commit </span><span class=\"mtk7\">-</span><span class=\"mtk1\">a</span></span></span></code></pre>\n<p>를 통해서 수정된 내역을 커밋. 커밋 로그 작성 방식은 위의 링크를 참조합니다.</p>\n<p>커밋을 하였으면 <code>git show</code>명령어를 이용하여 커밋이 됬는지 확인 후 <code>git review</code>명령어를 실행하면 되는데,\n아래와 같은 에러가 나오는 경우가 있습니다.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">fatal: ICLA contributor agreement requires current contact information.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Please review your contact information:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  https:</span><span class=\"mtk7\">//</span><span class=\"mtk1\">review.openstack.org</span><span class=\"mtk7\">/</span><span class=\"mtk3\">#/settings/contact</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">fatal: Could not read </span><span class=\"mtk7\">from</span><span class=\"mtk1\"> remote repository.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Please make sure you have the correct access rights</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">and the repository exists.</span></span></span></code></pre>\n<p>이런 경우는 openstack review 사이트의 <code>setting</code>항목에서 <code>contact inforamtion</code> 이 등록되어 있지 않아서, 그런 경우로 해당 경로로 이동해서 간단하게 메일주소와 국가를 입력해서 저장 하면됩니다.\n잽싸게 등록하고 아무문제 없이 저장이 된경우 <code>git review</code> 명령어를 실행하면…</p>\n<pre class=\"grvsc-container monokai\" data-language=\"ps\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">remote: Processing changes: new: </span><span class=\"mtk4\">1</span><span class=\"mtk7\">,</span><span class=\"mtk1\"> refs: </span><span class=\"mtk4\">1</span><span class=\"mtk7\">,</span><span class=\"mtk1\"> done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">remote:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">remote: New Changes:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">remote:   https:</span><span class=\"mtk7\">//</span><span class=\"mtk1\">review.openstack.org</span><span class=\"mtk7\">/</span><span class=\"mtk1\">xxxxxx your commit msg</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">remote:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">To ssh:</span><span class=\"mtk7\">//</span><span class=\"mtk1\">yourname@review.openstack.org:</span><span class=\"mtk4\">29418</span><span class=\"mtk7\">/</span><span class=\"mtk1\">openstack</span><span class=\"mtk7\">/</span><span class=\"mtk1\">cinder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">*</span><span class=\"mtk1\"> [</span><span class=\"mtk9 mtki\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">branch</span><span class=\"mtk1\">]      HEAD </span><span class=\"mtk7\">-&gt;</span><span class=\"mtk1\"> refs</span><span class=\"mtk7\">/</span><span class=\"mtk1\">publish</span><span class=\"mtk7\">/</span><span class=\"mtk1\">master</span><span class=\"mtk7\">/</span><span class=\"mtk1\">bp</span><span class=\"mtk7\">/</span><span class=\"mtk1\">branch</span></span></span></code></pre>\n<p>위와 같은 이런저런 review사이트에 등록되었다는 메시지가 나옵니다.(개인내용은 임의로 수정했습니다.)</p>\n<p>하지만 <code>contact information</code> 저장에서 <code>Code Review - Error server error</code> 에러가 나온다면 해당\n<a href=\"https://ask.openstack.org/en/question/56720/cannot-store-contact-information-when-updating-info-in-openstack-gerrit/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a>를 참조합니다.\nopenstack.org 에서 계정이 등록되어있지 않아서 그런 경우로 review 사이트와 동일한 email 주소로 등록을 해줍니다.</p>\n<p><code>git review</code> 실행 후 나온 review사이트 주소로 들어가면 본인이 등록한 review글이 보이고,\n처음 등록한 경우에는 reviewers 명단에 <code>Welcome, new contributor!</code> 라는 메시지가 나옵니다. </p>\n<p>성공적으로 작동 후 결과가 나오는 데는 시간이 조금 걸립니다. 다시 수정해야 하는 경우.\nreview시스템에 등록한 상태에서 다른 CI들과 함께 jenkins가 테스트를 한 뒤 승인을 하는데,\n테스트에서 실패가 발생하는 경우 코드를 다시 수정해서 올릴 수 있습니다.</p>\n<p>에러가 난 코드를 확인 한 뒤 <code>git commit -a --amend</code> 명령어를 이용해서 다시 커밋하고,\n<code>git review</code> 로 review시스템에 다시 등록하면 됩니다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"","fields":{"slug":"/posts/openstack_contributor_도전/","tagSlugs":["/tag/openstack/","/tag/git/","/tag/contributor/"]},"frontmatter":{"date":"2019-12-01 10:18:45.704249","description":"Openstack을 사용하면서 코드를 내가 수정한 부분을 openstack에 반영 했던것에 대한 정리글입니다.","tags":["openstack","git","contributor"],"title":"openstack contributor 도전","socialImage":null},"headings":[]}},"pageContext":{"slug":"/posts/openstack_contributor_도전/"}},"staticQueryHashes":["251939775","3691206191","401334301"]}