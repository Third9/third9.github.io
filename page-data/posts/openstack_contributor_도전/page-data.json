{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/openstack_contributor_도전/","result":{"data":{"markdownRemark":{"id":"a1060f64-b6fb-5175-b408-406ac16d5506","html":"<blockquote>\n<p>오픈스택을 공부하면서 간단한 철자 오류를 수정하고 싶어서 github에 올렸더니 contributor가 되려면 그냥 PR 하는 방법이 아닌 여러가지 단계를 거치기에 직접 시도해 본 내용을 글로 남깁니다.</p>\n</blockquote>\n<p>처음에는 일반적인 github 방식대로 Fork 한 뒤에 수정해서 PR을 했더니 PR 글 밑에 아래와 같은 답변을 줬습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Thank you for contributing to openstack/cinder!\n\nopenstack/cinder uses Gerrit for code review.\n\nIf you have never contributed to OpenStack before make sure you have read the getting started documentation: http://docs.openstack.org/infra/manual/developers.html#getting-started\n\nOtherwise please visit http://docs.openstack.org/infra/manual/developers.html#development-workflow and follow the instructions there to upload your change to Gerrit.</code></pre></div>\n<p>그래서 설명대로 링크를 찾아가 보니, 뭔가 엄청 많고 불친절한 영어의 압박…\n내용을 읽어보면 우선 <code class=\"language-text\">lunchpad</code>에 계정을 등록하라고 합니다.</p>\n<blockquote>\n<p>contributer 를 위해서는 코드리뷰를 해야 하는데 코드리뷰 시스템에 사용되는 계정이 open id 를 이용하기 때문에 그걸 등록해야 한다.</p>\n</blockquote>\n<p><a href=\"https://login.launchpad.net\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lunchpad 링크</a>로 이동해서 회원가입을 하고, 회원가입도 했으면 이제 <a href=\"https://review.openstack.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://review.openstack.org/</a> 로 이동합니다.\n여기 가서 오른쪽 상단을 보면 로그인 할 수 있게 되어있고, <code class=\"language-text\">open id</code> 에 로그인이 된 상태면 손쉽게 로그인이 가능합니다.</p>\n<blockquote>\n<p>아래의 순서대로 진행하면 됩니다.</p>\n<ol>\n<li>로그인 후에 오른쪽 상단의 이름을 선택하면 <code class=\"language-text\">setting</code> 버튼이 있습니다.</li>\n<li><code class=\"language-text\">setting</code> 화면에서 <code class=\"language-text\">profile</code>탭에 <code class=\"language-text\">username</code>을 등록하고, <code class=\"language-text\">contact information</code>은 내 개인정보를 등록하면 됩니다.</li>\n<li><code class=\"language-text\">ssh public keys</code>탭으로 이동해서 공용키를 등록하고, 없으면 터미널에서 <code class=\"language-text\">ssh-keygen</code> 을 실행하면 됩니다.\n<code class=\"language-text\">(*공용키 생성부터 등록까지의 방법도 해당 탭에 &quot;How to Generate an SSH Key&quot; 라는 이름으로 잘 설명되 있습니다.)</code></li>\n<li><code class=\"language-text\">Agreements</code>탭으로 이동해서 개인용 인증 라이센스를 발급 받으면 코드리뷰를 위한 기본 계정 생성 작업은 끝납니다.</li>\n</ol>\n</blockquote>\n<p>그 다음 부터는 맨 위에서 나온 getting-started 가이드를 보면서 다시 진행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config --global user.name xxxxx</code></pre></div>\n<p>설명 그대로 진행해서 git 전역 환경설정에 이름과 주소를 등록합니다.\n여기까지 했으면 이제 <code class=\"language-text\">git-review</code>를 설치합니다, 설치 방법은 자신의 환경 및 선호도에 따라서 다양하게 나와있습니다.\n이제 여기 까지 잘 됬는지 확인을 해보죠 아래의 명령어를 터미널에서 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#shell</span>\n<span class=\"token function\">ssh</span> -p <span class=\"token number\">29418</span> <span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>@review.openstack.org\n<span class=\"token comment\"># {username} 위치에는 아까 코드리뷰 등록할때 만든 username을 등록해야 한다.</span></code></pre></div>\n<p>잘됬으면 Welcome 어쩌구 저쩌구 하는 환영의 메시지가 나옵니다.\n그럼 이제 원하는 프로젝트를 골라서 git으로 다운받으면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone ssh://<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>@review.openstack.org:29418/<span class=\"token punctuation\">{</span>repo project name<span class=\"token punctuation\">}</span></code></pre></div>\n<p>내가 원하는 프로젝트 이름을 입력했는데 안되면 해당 <a href=\"https://review.openstack.org/#/admin/projects/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 로 들어가서 검색하면 됩니다.\n해당 repo를 다운받은 뒤에 디렉토리로 이동해서 아래의 명령어를 입력해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> review -s</code></pre></div>\n<p>명령어를 입력하면, 공용키 비밀번호를 입력하라고 나옵니다.</p>\n<blockquote>\n<p>에러가 발생한 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> gerrit ssh://<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>@review.openstack.org:29418/<span class=\"token punctuation\">{</span>repo project name<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>그 이후에는 아래의 명령어 입력</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> remote update</code></pre></div>\n<p>우선 브랜치를 새로 생성하고요 <a href=\"https://docs.openstack.org/infra/manual/developers.html#starting-a-change\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크 참조</a></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> checkout -b <span class=\"token punctuation\">{</span>브랜치명<span class=\"token punctuation\">}</span></code></pre></div>\n<p>브랜치 명은 보통 <code class=\"language-text\">bp/{내용}</code> 형태로 하는듯 한데, review 사이트를 가보면 각각 다릅니다, 최대한 링크의 설명대로 맞춰서 작성하죠.\n코드를 다 수정했으면 그 이후에는</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit -a</code></pre></div>\n<p>를 통해서 수정된 내역을 커밋. 커밋 로그 작성 방식은 위의 링크를 참조합니다.</p>\n<p>커밋을 하였으면 <code class=\"language-text\">git show</code>명령어를 이용하여 커밋이 됬는지 확인 후 <code class=\"language-text\">git review</code>명령어를 실행하면 되는데,\n아래와 같은 에러가 나오는 경우가 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fatal: ICLA contributor agreement requires current contact information.\n\nPlease review your contact information:\n\n  https://review.openstack.org/#/settings/contact\n\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.</code></pre></div>\n<p>이런 경우는 openstack review 사이트의 <code class=\"language-text\">setting</code>항목에서 <code class=\"language-text\">contact inforamtion</code> 이 등록되어 있지 않아서, 그런 경우로 해당 경로로 이동해서 간단하게 메일주소와 국가를 입력해서 저장 하면됩니다.\n잽싸게 등록하고 아무문제 없이 저장이 된경우 <code class=\"language-text\">git review</code> 명령어를 실행하면…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">remote: Processing changes: new: 1, refs: 1, done\nremote:\nremote: New Changes:\nremote:   https://review.openstack.org/xxxxxx your commit msg\nremote:\nTo ssh://yourname@review.openstack.org:29418/openstack/cinder\n * [new branch]      HEAD -&gt; refs/publish/master/bp/branch</code></pre></div>\n<p>위와 같은 이런저런 review사이트에 등록되었다는 메시지가 나옵니다.(개인내용은 임의로 수정했습니다.)</p>\n<p>하지만 <code class=\"language-text\">contact information</code> 저장에서 <code class=\"language-text\">Code Review - Error server error</code> 에러가 나온다면 해당\n<a href=\"https://ask.openstack.org/en/question/56720/cannot-store-contact-information-when-updating-info-in-openstack-gerrit/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a>를 참조합니다.\nopenstack.org 에서 계정이 등록되어있지 않아서 그런 경우로 review 사이트와 동일한 email 주소로 등록을 해줍니다.</p>\n<p><code class=\"language-text\">git review</code> 실행 후 나온 review사이트 주소로 들어가면 본인이 등록한 review글이 보이고,\n처음 등록한 경우에는 reviewers 명단에 <code class=\"language-text\">Welcome, new contributor!</code> 라는 메시지가 나옵니다. </p>\n<p>성공적으로 작동 후 결과가 나오는 데는 시간이 조금 걸립니다. 다시 수정해야 하는 경우.\nreview시스템에 등록한 상태에서 다른 CI들과 함께 jenkins가 테스트를 한 뒤 승인을 하는데,\n테스트에서 실패가 발생하는 경우 코드를 다시 수정해서 올릴 수 있습니다.</p>\n<p>에러가 난 코드를 확인 한 뒤 <code class=\"language-text\">git commit -a --amend</code> 명령어를 이용해서 다시 커밋하고,\n<code class=\"language-text\">git review</code> 로 review시스템에 다시 등록하면 됩니다.</p>","tableOfContents":"","fields":{"slug":"/posts/openstack_contributor_도전/","tagSlugs":["/tag/openstack/","/tag/git/","/tag/contributor/"]},"frontmatter":{"date":"2019-12-01 10:18:45.704249","description":"Openstack을 사용하면서 코드를 내가 수정한 부분을 openstack에 반영 했던것에 대한 정리글입니다.","tags":["openstack","git","contributor"],"title":"openstack contributor 도전","socialImage":null},"headings":[]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/openstack_contributor_도전/"}}}